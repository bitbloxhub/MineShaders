# MakeUp - shader.properties

#Profiles

profile.mineshaders= SIMPLE_AUTOEXP !SHADOW_CASTING SHADOW_QTY_SLIDER=1 SHADOW_DISTANCE_SLIDER=0 REFLECTION_SLIDER=0 !DOF DOF_STRENGTH=0.09 AO=0 AOSTEPS=4 AO_STRENGHT=0.70 AA_TYPE=0 !MOTION_BLUR REFRACTION=0 SUN_REFLECTION=0 WAVING=0 V_CLOUDS=0 CLOUD_STEPS_AVG=7 CLOUD_VOL_STYLE=0 BLOOM_SAMPLES=4.0 !BLOOM CHROMA_ABER=0 VOL_LIGHT=0 !CLOUD_REFLECTION WATER_ABSORPTION=0.10 COLOR_SCHEME=1 VANILLA_WATER=true WATER_COLOR_SOURCE=0 !COLORED_SHADOW MOTION_BLUR_SAMPLES=4 !MATERIAL_GLOSS DYN_HAND_LIGHT=0 NIGHT_BRIGHT=3.0 AVOID_DARK_LEVEL=0.20 FOG_ADJUST=10.0
# Default forced options
vignette = false
separateAo = false
oldLighting = false
dynamicHandLight = true
oldHandLight = false
underwaterOverlay = false
sun = true
moon = true
frustum.culling = true
shadow.culling = true
particles.before.deferred = true

#if V_CLOUDS > 0
  clouds = off
#else
  clouds = fancy
#endif

texture.gbuffers.noisetex = textures/water_256_RG_8bit.png
texture.deferred.colortex2 = textures/clouds_blocky_512_R_8bit.png
texture.gbuffers.colortex2 = textures/clouds_blocky_512_R_8bit.png
texture.deferred.gaux2 = textures/clouds_natural_512_R_8bit.png
texture.gbuffers.gaux2 = textures/clouds_natural_512_R_8bit.png

program.shadow.enabled=SHADOW_CASTING
program.world0/shadow.enabled=SHADOW_CASTING
program.world1/shadow.enabled=SHADOW_CASTING
program.world-1/shadow.enabled=SHADOW_CASTING

# Config main screen
screen.columns = 3
screen = <profile> <empty> ACERCADE <empty> WAVING <empty> COLOR_SCHEME BLOOM REFLECTION_SLIDER <empty> AO SUN_REFLECTION SHADOW_CASTING V_CLOUDS CLOUD_REFLECTION COLORED_SHADOW AA_TYPE REFRACTION VOL_LIGHT DOF MATERIAL_GLOSS <empty> CHROMA_ABER <empty> SIMPLE_AUTOEXP MOTION_BLUR [ADVANCED_SCREEN]

# Sub-screens:
screen.ADVANCED_SCREEN = [SHADOWS_SCREEN] [DOF_SCREEN] [AO_SCREEN] [WATER_SCREEN] [POST_SCREEN] [CLOUDS_SCREEN] [SUN_SCREEN] [DARKNESS_SCREEN] [FOG_SCREEN] [MOTION_BLUR_SCREEN]  BLOCKLIGHT_TEMP [ACCESIBILITY_SCREEN] USE_BASIC_SH DYN_HAND_LIGHT <empty> <empty> [DEBUG_SCREEN] BLACK_ENTITY_FIX
screen.SHADOWS_SCREEN = SHADOW_TYPE SHADOW_BLUR SHADOW_DISTANCE_SLIDER SHADOW_QTY_SLIDER
screen.DOF_SCREEN = DOF_STRENGTH
screen.AO_SCREEN = AOSTEPS AO_STRENGHT
screen.WATER_SCREEN = WATER_ABSORPTION WATER_TEXTURE VANILLA_WATER WATER_COLOR_SOURCE WATER_TURBULENCE
screen.POST_SCREEN = BLOOM_SAMPLES CHROMA_ABER_STRENGHT
screen.CLOUDS_SCREEN = CLOUD_SPEED CLOUD_STEPS_AVG CLOUD_VOL_STYLE
screen.SUN_SCREEN = sunPathRotation
screen.DARKNESS_SCREEN = AVOID_DARK_LEVEL NIGHT_BRIGHT
screen.FOG_SCREEN = FOG_ADJUST
screen.MOTION_BLUR_SCREEN = MOTION_BLUR_STRENGTH MOTION_BLUR_SAMPLES
screen.DEBUG_SCREEN = DEBUG_MODE
screen.ACCESIBILITY_SCREEN = COLOR_BLINDNESS COLOR_BLIND_MODE

sliders = SHADOW_DISTANCE_SLIDER SHADOW_QTY_SLIDER REFLECTION_SLIDER SHADOW_BLUR DOF_STRENGTH AOSTEPS AO_STRENGHT MOTION_BLUR_STRENGTH WATER_ABSORPTION CHROMA_ABER_STRENGHT BLOOM_SAMPLES CLOUD_STEPS_AVG sunPathRotation NIGHT_BRIGHT AVOID_DARK_LEVEL WATER_TURBULENCE FOG_ADJUST MOTION_BLUR_SAMPLES BLOCKLIGHT_TEMP

# Custom uniforms -----

# Pixel size
# uniform.float.pixel_size_x = 1.0 / viewWidth
# uniform.float.pixel_size_y = 1.0 / viewHeight
# uniform.float.inv_aspect_ratio = 1.0 / aspectRatio

# Time constants
# variable.float.hour_world = worldTime * 0.001
# variable.float.day_moment = hour_world * 0.04166666666666667

# Day color mixer (for shadows)
# f(x) = min(−((x−.25)^2)∙20 + 1.25, 1)
# g(x) = min(−((x−.75)^2)∙50 + 3.125, 1)

# variable.float.moment_aux = day_moment - 0.25
# variable.float.moment_aux_2 = moment_aux * moment_aux
# uniform.float.day_mixer = clamp(-moment_aux_2 * 20.0 + 1.25, 0.0, 1.0)

# variable.float.moment_aux_3 = day_moment - 0.75
# variable.float.moment_aux_4 = moment_aux_3 * moment_aux_3
# uniform.float.night_mixer = clamp(-moment_aux_4 * 50.0 + 3.125, 0.0, 1.0)

# Day color mixer (for volumetric light)

# variable.float.moment_aux_5 = (day_moment * 4.0) - 1.0
# variable.float.moment_aux_6 = moment_aux_5 * moment_aux_5 * moment_aux_5 * moment_aux_5
# variable.float.day_vol_mixer = clamp(((-moment_aux_6 + 1.0) * 7.0) + 1.0, 1.0, 8.0)

# variable.float.moment_aux_7 = (day_moment * 4.0) - 3.0
# variable.float.moment_aux_8 = moment_aux_7 * moment_aux_7 * moment_aux_7 * moment_aux_7
# variable.float.night_vol_mixer = clamp(((-moment_aux_8 + 1.0) * 7.0) + 1.0, 1.0, 8.0)

# uniform.float.vol_mixer = max(day_vol_mixer, night_vol_mixer)

# Light mix
# variable.float.light_mix_a = if((worldTime >= 0 && worldTime < 12485) || worldTime >= 23515, 1.0, 0.0)
# variable.float.light_mix_b = if(worldTime >= 12485 && worldTime < 13085, 1.0 - ((worldTime - 12485) * 0.0016666666666666668), 0.0)
# variable.float.light_mix_c = if(worldTime >= 13085 && worldTime < 22915, 0.0, 0.0)
# variable.float.light_mix_d = if(worldTime >= 22915 && worldTime < 23515, (worldTime - 22915) * 0.0016666666666666668, 0.0)
# variable.float.light_mix_e = max(light_mix_a, light_mix_b)
# variable.float.light_mix_f = max(light_mix_c, light_mix_d)
# uniform.float.light_mix = max(light_mix_e, light_mix_f)

# TAA
# uniform.int.frame_mod = fmod(frameCounter, 10)

# TAA OFFSET

#if AA_TYPE > 0
    # Pentagon
    # uniform.vec2.taa_offset = vec2((if( \
    # frame_mod == 0,  0.7071067811865476, \
    # frame_mod == 1, -0.5720614028176843, \
    # frame_mod == 2,  0.2185080122244104, \
    # frame_mod == 3,  0.21850801222441057, \
    # frame_mod == 4, -0.5720614028176845, \
    # frame_mod == 5,  0.7071067811865476, \
    # frame_mod == 6, -0.5720614028176843, \
    # frame_mod == 7,  0.2185080122244104, \
    # frame_mod == 8,  0.21850801222441057, \
    # frame_mod == 9,  -0.5720614028176845, \
    # 0.0)) * pixel_size_x, \
    # (if( \
    # frame_mod == 0,  0.0, \
    # frame_mod == 1,  0.4156269377774535, \
    # frame_mod == 2, -0.6724985119639574, \
    # frame_mod == 3,  0.6724985119639574, \
    # frame_mod == 4, -0.4156269377774534, \
    # frame_mod == 5,  0.0, \
    # frame_mod == 6,  0.4156269377774535, \
    # frame_mod == 7, -0.6724985119639574, \
    # frame_mod == 8,  0.6724985119639574, \
    # frame_mod == 9, -0.4156269377774534, \
    # 0.0)) * pixel_size_y)

    # Dither shift
    # uniform.float.dither_shift = if( \
    # frame_mod == 0, 0.0, \
    # frame_mod == 1, 0.23357464195808708, \
    # frame_mod == 2, 0.5928235978395564, \
    # frame_mod == 3, 0.9007804890147557, \
    # frame_mod == 4, 0.2247837296466677, \
    # frame_mod == 5, 0.4376966419839634, \
    # frame_mod == 6, 0.811372918225491, \
    # frame_mod == 7, 0.041018671427652365, \
    # frame_mod == 8, 0.45487913258395407, \
    # frame_mod == 9, 0.7699489101682118, \
    # 0.0)
#endif

# FOV
# uniform.float.fov_y_inv = 1.0 / atan(1.0 / gbufferProjection.1.1) * 0.5

# float horizontalFOV = atan(1.0 / gbufferProjection[0].x);
# float verticalFOV = atan(1.0 / gbufferProjection[1].y);
